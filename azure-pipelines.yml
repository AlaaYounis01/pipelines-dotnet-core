trigger:
- master

pool:
  name: 'test pipeline'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  packageOutputPath: '$(Build.ArtifactStagingDirectory)/nuget'

steps:
# Nous installons L'outil NuGet
- task: NuGetToolInstaller@1

# Restaurer les dépendances depuis Azure Artifacts
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'
    vstsFeed: '<project-id>/<feed-id>'  # à remplacer plus tard

# Build du projet
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Tests
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Packager le projet en .nupkg
- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    configuration: '$(buildConfiguration)'
    packDestination: '$(packageOutputPath)'

# Publier le package sur Azure Artifacts
- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(packageOutputPath)/*.nupkg'
    publishVstsFeed: '<project-id>/<feed-id>'  # à remplacer encore

